{"version":3,"sources":["api/api.js","redux/auth-reducer.js","serviceWorker.js","redux/sidebar-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Settings/FieldLevelValidationForm.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Settings/Texteria.js","components/Settings/Settings.js","hoc/withSuspense.js","App.js","index.js","components/Common/Preloader/Preloader.js","components/Common/FormsControls/FormControls.js","components/Common/FormsControls/FormControls.module.css","components/Header/Header.module.css","components/Common/Preloader/Preloader.module.css","redux/profile-reducer.js","components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","redux/users-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","followAPI","follow","userId","post","unfollow","delete","authAPI","authMe","id","email","login","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","SET_USER_DATA","initialState","isAuth","dispatch","a","resultCode","setAuthUserData","rememberMy","message","messages","length","stopSubmit","_error","type","payload","authReducer","state","action","Boolean","window","location","hostname","match","sidebar","sidebarReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","max","min","Navbar","props","className","s","nav","item","NavLink","to","activeClassName","activeLink","active","friends","avaFriends","ClassName","src","Header","header","loginBlock","onClick","HeaderContainer","this","React","Component","compose","connect","required","value","undefined","maxLength15","number","isNaN","Number","minValue18","test","tooOld","aol","renderField","input","label","meta","touched","error","warning","placeholder","reduxForm","handleSubmit","pristine","reset","submitting","onSubmit","Field","name","component","validate","warn","disabled","Texteria","SettingsReduxForm","Input","Settings","formData","console","log","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initializeApp","Route","path","render","withRouter","promise","Promise","all","ReactDOM","HashRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister","styles","preloader","spinner","FormControl","child","hasError","formControl","children","Textarea","restProps","module","exports","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUsersProfile","newPost","filter","p","postId","SEND_MESSAGE","dialogs","sendMessageCreator","newMessageBody","body","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","page","items","totalCount","count","map","u","followed"],"mappings":"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","file":"static/js/main.f302b928.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"560da080-fabd-4f29-b42e-4282d377ec5b\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`unfollow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe(id, email, login) {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response;\r\n            });\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n        .then(response => {\r\n            return response;\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\nreturn 'it-incubator.by';\r\n}\r\n\r\nexport const login = (email, password, rememberMy) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMy)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => (\r\n    {type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport default authReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nlet initialState = {\r\n    sidebar: {}\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    await Promise.all([promise])\r\n        dispatch(initializedSuccess());\r\n    }\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst required = value => value ? undefined : 'Required'\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nconst maxLength15 = maxLength(15)\r\nconst number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue18 = minValue(18)\r\nconst email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n        'Invalid email address' : undefined\r\nconst tooOld = value =>\r\n    value && value > 65 ? 'You might be too old for this' : undefined\r\nconst aol = value =>\r\n    value && /.+@aol\\.com/.test(value) ?\r\n        'Really? You still use AOL for your email?' : undefined\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type}/>\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst FieldLevelValidationForm = (props) => {\r\n    const { handleSubmit, pristine, reset, submitting } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name=\"username\" type=\"text\"\r\n                   component={renderField} label=\"Username\"\r\n                   validate={[ required, maxLength15 ]}\r\n            />\r\n            <Field name=\"email\" type=\"email\"\r\n                   component={renderField} label=\"Email\"\r\n                   validate={email}\r\n                   warn={aol}\r\n            />\r\n            <Field name=\"age\" type=\"number\"\r\n                   component={renderField} label=\"Age\"\r\n                   validate={[ required, number, minValue18 ]}\r\n                   warn={tooOld}\r\n            />\r\n            <div>\r\n                <button type=\"submit\" disabled={submitting}>Submit</button>\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'fieldLevelValidation' // a unique identifier for this form\r\n})(FieldLevelValidationForm)","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <div className={s.friends}>\r\n                    <h3>Friends</h3>\r\n                </div>\r\n                    <div className={s.avaFriends}>\r\n                        <NavLink to=\"/friends\" ClassName={s.friends}>Andrey</NavLink>\r\n                        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe7N0tN8gs2aqKdCxboBvUfzRVgqKLYT7pIw&usqp=CAU' />\r\n                    </div>\r\n                    <div className={s.avaFriends}>\r\n                        <NavLink to=\"/friends\" ClassName={s.friends}>Dmitry</NavLink>\r\n                    <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe7N0tN8gs2aqKdCxboBvUfzRVgqKLYT7pIw&usqp=CAU' />\r\n                    </div>\r\n                    <div className={s.avaFriends}>\r\n                        <NavLink to=\"/friends\" ClassName={s.friends}>Roman</NavLink>\r\n                        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe7N0tN8gs2aqKdCxboBvUfzRVgqKLYT7pIw&usqp=CAU' />\r\n                    </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport NavLink from \"react-router-dom/NavLink\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}))(HeaderContainer);","import React from 'react';\r\n\r\nexport const Texteria = (props) => {\r\n    return(\r\n        <div>\r\n        <textarea {...props} />\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Input} from \"../Common/FormsControls/FormControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport FieldLevelValidationForm from \"./FieldLevelValidationForm\";\r\nimport {Texteria} from \"./Texteria\";\r\n\r\nconst SettingsForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  placeholder={'wot wrong?'} name={'settings'}\r\n                        component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field  placeholder={'wot heppen?'} name={'next'}\r\n                        component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field  placeholder={'are yuo shure?'} name={'finish'}\r\n                        component={Texteria}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SettingsReduxForm = reduxForm({form: 'Settings'})(SettingsForm)\r\n\r\nexport const Settings = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n    return <div>\r\n        <h1>Settings</h1>\r\n        <SettingsReduxForm onSubmit={onSubmit} />\r\n        <FieldLevelValidationForm />\r\n        {/*<Texteria />*/}\r\n    </div>\r\n}","import React from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer) }/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer) }/>\r\n\r\n                    <Route path='/users'\r\n                           render={withSuspense(UsersContainer) }/>\r\n\r\n                    <Route path='/login'\r\n                           render={withSuspense(LoginPage) }/>\r\n\r\n                    <Route path='/Settings'\r\n                           render={() => <Settings/> }/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={styles.preloader}>\r\n        <div className={styles.spinner}></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__304q_\",\"error\":\"FormControls_error__cEnW8\",\"formSummaryError\":\"FormControls_formSummaryError__1628R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3OHsf\",\"loginBlock\":\"Header_loginBlock__2EOhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1NnSt\",\"spinner\":\"Preloader_spinner__3VC84\",\"spin\":\"Preloader_spin__2DfaL\"};","import {profileAPI} from \"../api/api\";\r\n\r\n// КОНСТАНТИ, просто назви які ми використовуватимо\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n// ДАНІ STATE\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    // SWITCH-CASE, СВІЧ КЕЙСИ\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// ЕКШИН-КРІЕТОРИ, ACTION_CREATOR\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\n// САНКИ, THUNK\r\nexport const getUsersProfile = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__25sKP\",\"item\":\"Navbar_item__yjNLl\",\"activeLink\":\"Navbar_activeLink__1fvf6\",\"friends\":\"Navbar_friends__3xRJ1\",\"avaFriends\":\"Navbar_avaFriends__15mVr\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import {followAPI, usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.requestUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await followAPI.follow(userId)\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = followAPI.unfollow(userId)\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n}\r\n\r\nexport default usersReducer;"],"sourceRoot":""}