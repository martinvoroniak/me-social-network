{"version":3,"sources":["redux/users-reducer.ts","components/Navbar/Navbar.module.css","api/api.js","serviceWorker.js","redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Settings/FieldLevelValidationForm.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Settings/Texteria.js","components/Settings/Settings.js","hoc/withSuspense.js","App.js","index.js","redux/auth-reducer.ts","components/Common/Preloader/Preloader.js","components/Common/FormsControls/FormControls.js","components/Common/FormsControls/FormControls.module.css","components/Header/Header.module.css","components/Common/Preloader/Preloader.module.css","redux/profile-reducer.ts","redux/dialogs-reducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","data","items","totalCount","count","follow","followAPI","resultCode","unfollow","usersReducer","state","action","map","u","id","followed","filter","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","authAPI","authMe","email","login","password","rememberMe","captcha","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","securityAPI","getCaptchaUrl","Boolean","window","location","hostname","match","sidebar","sidebarReducer","INITIALIZED_SUCCESS","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","max","min","Navbar","props","className","s","nav","item","NavLink","to","activeClassName","activeLink","active","friends","avaFriends","ClassName","src","Header","header","loginBlock","isAuth","onClick","HeaderContainer","this","React","Component","connect","required","value","undefined","maxLength15","length","number","isNaN","Number","minValue18","test","tooOld","aol","renderField","input","label","meta","touched","error","warning","placeholder","reduxForm","handleSubmit","pristine","reset","submitting","onSubmit","Field","name","component","validate","warn","disabled","Texteria","SettingsReduxForm","Input","Settings","console","log","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","Switch","Redirect","exact","from","Route","path","render","pageTitle","withRouter","Promise","all","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","rememberMy","message","messages","stopSubmit","_error","url","getCaptchaUrlSuccess","payload","styles","preloader","spinner","FormControl","children","hasError","formControl","Textarea","restProps","child","createField","validators","text","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","newPostText","addPostActionCreator","setStatus","getUsersProfile","file","photos","getState","reject","newPost","p","postId","SEND_MESSAGE","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.790c1a8b.chunk.js","sourcesContent":["import {followAPI, usersAPI} from \"../api/api\";\r\nimport {UserType} from \"../types/Types\";\r\n\r\n// CONSTANTS\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number> // Array of users id\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_USERS_TOTAL_COUNT\r\n    count: number\r\n}\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.requestUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await followAPI.follow(userId)\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = followAPI.unfollow(userId)\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__25sKP\",\"item\":\"Navbar_item__yjNLl\",\"activeLink\":\"Navbar_activeLink__1fvf6\",\"friends\":\"Navbar_friends__3xRJ1\",\"avaFriends\":\"Navbar_avaFriends__15mVr\"};","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"560da080-fabd-4f29-b42e-4282d377ec5b\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`unfollow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe(id, email, login) {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response;\r\n            });\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n        .then(response => {\r\n            return response;\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nlet initialState = {\r\n    sidebar: {}\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n    let promise = dispatch(authMe());\r\n    await Promise.all([promise])\r\n        dispatch(initializedSuccess());\r\n    }\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst required = value => value ? undefined : 'Required'\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nconst maxLength15 = maxLength(15)\r\nconst number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue18 = minValue(18)\r\nconst email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n        'Invalid email address' : undefined\r\nconst tooOld = value =>\r\n    value && value > 65 ? 'You might be too old for this' : undefined\r\nconst aol = value =>\r\n    value && /.+@aol\\.com/.test(value) ?\r\n        'Really? You still use AOL for your email?' : undefined\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type}/>\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst FieldLevelValidationForm = (props) => {\r\n    const { handleSubmit, pristine, reset, submitting } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name=\"username\" type=\"text\"\r\n                   component={renderField} label=\"Username\"\r\n                   validate={[ required, maxLength15 ]}\r\n            />\r\n            <Field name=\"email\" type=\"email\"\r\n                   component={renderField} label=\"Email\"\r\n                   validate={email}\r\n                   warn={aol}\r\n            />\r\n            <Field name=\"age\" type=\"number\"\r\n                   component={renderField} label=\"Age\"\r\n                   validate={[ required, number, minValue18 ]}\r\n                   warn={tooOld}\r\n            />\r\n            <div>\r\n                <button type=\"submit\" disabled={submitting}>Submit</button>\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'fieldLevelValidation' // a unique identifier for this form\r\n})(FieldLevelValidationForm)","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <div className={s.friends}>\r\n                    <h3>Friends</h3>\r\n                </div>\r\n                    <div className={s.avaFriends}>\r\n                        <NavLink to=\"/friends\" ClassName={s.friends}>Andrey</NavLink>\r\n                        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe7N0tN8gs2aqKdCxboBvUfzRVgqKLYT7pIw&usqp=CAU' />\r\n                    </div>\r\n                    <div className={s.avaFriends}>\r\n                        <NavLink to=\"/friends\" ClassName={s.friends}>Dmitry</NavLink>\r\n                    <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe7N0tN8gs2aqKdCxboBvUfzRVgqKLYT7pIw&usqp=CAU' />\r\n                    </div>\r\n                    <div className={s.avaFriends}>\r\n                        <NavLink to=\"/friends\" ClassName={s.friends}>Roman</NavLink>\r\n                        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe7N0tN8gs2aqKdCxboBvUfzRVgqKLYT7pIw&usqp=CAU' />\r\n                    </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport NavLink from \"react-router-dom/NavLink\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}))(HeaderContainer);","import React from 'react';\r\n\r\nexport const Texteria = (props) => {\r\n    return(\r\n        <div>\r\n        <textarea {...props} />\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Input} from \"../Common/FormsControls/FormControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport FieldLevelValidationForm from \"./FieldLevelValidationForm\";\r\nimport {Texteria} from \"./Texteria\";\r\n\r\nconst SettingsForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  placeholder={'wot wrong?'} name={'settings'}\r\n                        component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field  placeholder={'wot heppen?'} name={'next'}\r\n                        component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field  placeholder={'are yuo shure?'} name={'finish'}\r\n                        component={Texteria}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SettingsReduxForm = reduxForm({form: 'Settings'})(SettingsForm)\r\n\r\nexport const Settings = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n    return <div>\r\n        <h1>Settings</h1>\r\n        <SettingsReduxForm onSubmit={onSubmit} />\r\n        <FieldLevelValidationForm />\r\n        {/*<Texteria />*/}\r\n    </div>\r\n}","import React from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        alert(\"some error\")\r\n    }\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener( \"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener( \"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\" />\r\n\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n\r\n                        <Route path='/users'\r\n                               render={withSuspense(<UsersContainer pageTitle={'samurai'}/>)}/>\r\n\r\n                        <Route path='/login'\r\n                               render={withSuspense(LoginPage)}/>\r\n\r\n                        <Route path='/Settings'\r\n                               render={() => <Settings/>}/>\r\n\r\n                               <Route path='*'\r\n                                    render={() => <div>404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    // commit\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null // if null, then captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const authMe = () => async (dispatch: any) => {\r\n    const response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        const {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n    return 'it-incubator.by';\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMy: boolean, captcha:string) => async (dispatch: any) => {\r\n    const response = await authAPI.login(email, password, rememberMy, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        // @ts-ignore\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean | null\r\n}\r\n\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: SetAuthUserDataPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => (\r\n    {type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\ntype GetCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: { captchaUrl: string }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType  => (\r\n    {type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={styles.preloader}>\r\n        <div className={styles.spinner}></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__304q_\",\"error\":\"FormControls_error__cEnW8\",\"formSummaryError\":\"FormControls_formSummaryError__1628R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3OHsf\",\"loginBlock\":\"Header_loginBlock__2EOhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1NnSt\",\"spinner\":\"Preloader_spinner__3VC84\",\"spin\":\"Preloader_spin__2DfaL\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/Types\";\r\n\r\n// КОНСТАНТИ, просто назви які ми використовуватимо\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n// ДАНІ STATE\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    // SWITCH-CASE, СВІЧ КЕЙСИ\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// ACTIONS-TYPES\r\ntype AddPostActionCreatorActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\n\r\n// ЕКШИН-КРІЕТОРИ, ACTION_CREATOR\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n// САНКИ, THUNK\r\nexport const getUsersProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n            dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    try {\r\n        const response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUsersProfile(userId));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]} ));\r\n        //{\"contacts\" : {\"facebook\": response.data.messages[0]} }\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}