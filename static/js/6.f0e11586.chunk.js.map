{"version":3,"sources":["utils/validators/validators.js","components/Login/Login.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","createField","Input","type","src","className","style","formSummaryError","connect","state","auth","isAuth","login","props","to","formData","email","password","rememberMe","captcha"],"mappings":"8HAAA,oEAAO,IAAMA,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCPlC,2FA+BME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAtBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACrC,OACI,uBAAMC,SAAUH,EAAhB,UACKI,YAAY,QAAS,QAAS,CAACZ,KAAWa,KAC1CD,YAAY,WAAY,WAAY,CAACZ,KAAWa,IAAO,CAACC,KAAM,aAC9DF,YAAY,KAAM,aAAc,GAAIC,IAAO,CAACC,KAAM,YAAa,eAE9DJ,GAAc,qBAAKK,IAAKL,IACxBA,GACFE,YAAY,qBAAsB,UAAW,CAACZ,KAAWa,KAExDJ,GAAS,qBAAKO,UAAWC,IAAMC,iBAAtB,SACLT,IAGL,8BACI,mDA2BDU,uBALS,SAACC,GAAD,MAAY,CAChCV,WAAYU,EAAMC,KAAKX,WACvBY,OAAQF,EAAMC,KAAKC,UAGiB,CAACC,WAA1BJ,EAnBD,SAACK,GAKX,OAAIA,EAAMF,OACC,cAAC,IAAD,CAAUG,GAAI,aAGlB,gCACH,uCACA,cAACpB,EAAD,CAAgBM,SAVH,SAACe,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI","file":"static/js/6.f0e11586.chunk.js","sourcesContent":["export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max lenght is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../Common/FormsControls/FormControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl}/>}\r\n            { captchaUrl &&\r\n            createField(\"Symbols from image\", \"captcha\", [required], Input)}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}